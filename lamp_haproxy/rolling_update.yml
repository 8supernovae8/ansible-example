---
# This playbook does a rolling update for all webservers serially (one at a time).
# Change the value of serial: to adjust the number of server to be updated.
#
# The three roles that apply to the webserver hosts will be applied: common,
# base-apache, and web. So any changes to configuration, package updates, etc,
# will be applied as part of the rolling update process.
#

# gather facts from monitoring nodes for iptables rules
- hosts: monitoring
  tasks: []

- hosts: webservers
  serial: 1

  # These are the tasks to run before applying updates:
  pre_tasks:
    - name: Disable nagios alerts for this host webserver service
      community.general.monitoring.nagios: action=disable_alerts host={{ inventory_hostname }} services=webserver
      delegate_to: "{{ item }}"
      with_items: "{{ groups.monitoring }}"

    - name: Disable the server in haproxy
      community.general.net_tools.haproxy: state=disabled backend=myapplb host={{ inventory_hostname }} socket=/var/lib/haproxy/stats
      delegate_to: "{{ item }}"
      with_items: "{{ groups.lbservers }}"

  roles:
    - common
    - base-apache
    - web

  # These tasks run after the roles:
  post_tasks:
    - name: Wait for webserver to come up
      ansible.builtin.wait_for:
        host: "{{ inventory_hostname }}"
        port: "80"
        state: started
        timeout: "80"

    - name: Enable the server in haproxy
      community.general.haproxy:
        state: enabled
        backend: myapplb
        host: "{{ inventory_hostname }}"
        socket: /var/lib/haproxy/stats
      delegate_to: "{{ item }}"
      with_items: "{{ groups.lbservers }}"

    - name: Re-enable nagios alerts
      community.general.nagios:
        action: enable_alerts
        host: "{{ inventory_hostname }}"
        services: webserver
      delegate_to: "{{ item }}"
      with_items: "{{ groups.monitoring }}"
