---
#Provision some instances:
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
  - group_vars/all
  - group_vars/vault.yml
 
  tasks:
  - name: Launch webserver instances
    ec2: 
     access_key: "{{ ec2_access_key }}"
     secret_key: "{{ ec2_secret_key }}"
     keypair: "{{ ec2_keypair }}"
     group: "{{ ec2_security_group }}"
     type: "{{ ec2_instance_type }}"
     image: "{{ ec2_image }}"
     region: "{{ ec2_region }}"
     instance_tags: "{'ansible_group':'windows_webservers', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'Demo_Windows_Webserver'}"
     exact_count: "{{ ec2_instance_count }}"
     count_tag:
            Name: Demo_Windows_Webserver
     wait: true
     user_data: |
       <powershell>
       $admin = [adsi]("WinNT://./administrator, user")
       $admin.PSBase.Invoke("SetPassword", "{{ win_initial_password }}")
       Invoke-Expression ((New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1'))
       </powershell>
    register: ec2

    tags:
      - web

  - name: Launch database instance
    ec2:
     access_key: "{{ ec2_access_key }}"
     secret_key: "{{ ec2_secret_key }}"
     keypair: "{{ ec2_keypair }}"
     group: "{{ ec2_security_group }}"
     type: "{{ ec2_instance_type }}"
     image: "{{ ec2_image }}"
     region: "{{ ec2_region }}"
     instance_tags: "{'ansible_group':'windows_dbservers', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'Demo_Windows_DBServer'}"
     exact_count: "1"
     count_tag:
            Name: Demo_Windows_DBServer
     wait: true
     user_data: |
       <powershell>
       $admin = [adsi]("WinNT://./administrator, user")
       $admin.PSBase.Invoke("SetPassword", "{{ win_initial_password }}")
       Invoke-Expression ((New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1'))
       </powershell>
    register: ec2

    tags:
      - db

#  - name: Wait for WinRM to come up
#    local_action: wait_for host={{ item.public_dns_name }}
#      port=5986 delay=60 timeout=320 state=started
#    with_items: "{{ ec2.instances }}"

    #tags:
    #  - web
    #  - db

