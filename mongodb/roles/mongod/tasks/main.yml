---
# This role deploys the mongod processes and sets up the replication set.

- name: Create data directory for mongodb
  ansible.builtin.file:
    path: "{{ mongodb_datadir_prefix }}/mongo-{{ inventory_hostname }} "
    state: directory
    owner: mongod
    group: mongod
  delegate_to: "{{ item }}"
  with_items: groups.replication_servers

- name: Create log directory for mongodb
  ansible.builtin.file:
    path: /var/log/mongo
    state: directory
    owner: mongod
    group: mongod

- name: Create run directory for mongodb
  ansible.builtin.file:
    path: /var/run/mongo
    state: directory
    owner: mongod
    group: mongod

- name: Create the mongodb startup file
  ansible.builtin.template:
    src: mongod.j2
    dest: "/etc/init.d/mongod-{{ inventory_hostname }}"
    mode: "0655"
  delegate_to: "{{ item }}"
  with_items: groups.replication_servers

- name: Create the mongodb configuration file
  ansible.builtin.template:
    src: mongod.conf.j2
    dest: "/etc/mongod-{{ inventory_hostname }}.conf"
  delegate_to: "{{ item }}"
  with_items: groups.replication_servers

- name: Copy the keyfile for authentication
  ansible.builtin.copy:
    src: secret
    dest: "{{ mongodb_datadir_prefix }}/secret "
    owner: mongod
    group: mongod
    mode: "0400"

- name: Start the mongodb service
  ansible.builtin.command:
    creates: /var/lock/subsys/mongod-{{ inventory_hostname }}
    cmd: /etc/init.d/mongod-{{ inventory_hostname }} start
  delegate_to: "{{ item }}"
  with_items: groups.replication_servers

- name: Create the file to initialize the mongod replica set
  ansible.builtin.template:
    src: repset_init.j2
    dest: /tmp/repset_init.js

- name: Pause for a while
  ansible.builtin.pause:
    seconds: "20"

- name: Initialize the replication set
  ansible.builtin.command: /usr/bin/mongo --port "{{ mongod_port }}" /tmp/repset_init.js
