##
# Example Ansible playbook that uses the PostgreSQL module.
#
# This installs PostgreSQL on an Ubuntu system, creates a database called
# "myapp" and a user called "django" with password "mysupersecretpassword"
# with access to the "myapp" database.
#
---
- hosts: webservers
  become: true
  gather_facts: false

  tasks:
    - name: ensure apt cache is up to date
      ansible.builtin.apt:
        update_cache: true

    - name: ensure packages are installed
      ansible.builtin.apt:
        name: "{{ item }}"

      with_items:
        - postgresql
        - libpq-dev
        - python-psycopg2

- hosts: webservers
  become: true
  become_user: postgres
  gather_facts: false

  vars:
    dbname: myapp
    dbuser: django
    dbpassword: mysupersecretpassword

  tasks:
    - name: ensure database is created
      community.postgresql.postgresql_db:
        name: "{{ dbname }}"

    - name: ensure user has access to database
      community.postgresql.postgresql_user:
        name: "{{ dbuser }}"
        db: "{{ dbname }}"
        password: "{{ dbpassword }}"
        priv: ALL

    - name: ensure user does not have unnecessary privilege
      community.postgresql.postgresql_user:
        name: "{{ dbuser }}"
        role_attr_flags: NOSUPERUSER,NOCREATEDB

    - name: ensure no other user can access the database
      community.postgresql.postgresql_privs:
        db: "{{ dbname }}"
        role: PUBLIC
        type: database
        priv: ALL
        state: absent

