##
# Example Ansible playbook that uses the PostgreSQL module.
#
# This installs PostgreSQL on an Ubuntu system, creates a database called
# "myapp" and a user called "django" with password "mysupersecretpassword"
# with access to the "myapp" database. A provision for md5 authentication
# for local connections is added and a task to verify that your Postgres is
# always running.
#
---
- hosts: webservers
  sudo: yes
  gather_facts: no

  tasks:
  - name: ensure apt cache is up to date
    apt: update_cache=yes
  - name: ensure packages are installed
    apt: name={{item}}
    with_items:
        - postgresql
        - libpq-dev
        - python-psycopg2

- hosts: webservers
  sudo: yes
  sudo_user: postgres
  gather_facts: no

  vars:
    dbname: myapp
    dbuser: django
    dbpassword: mysupersecretpassword

  tasks:
  - name: Ensure the PostgreSQL service is running
    service: name=postgresql state=started enabled=yes

  - name: Allow md5 authentication for local connections
    lineinfile: >
        dest='/etc/postgresql/9.3/main/pg_hba.conf'
        regexp='^local.+all.+all.+peer$' backrefs=yes
        line='local all all md5'
    tags: packages

  - name: ensure database is created
    postgresql_db: name={{dbname}}

  - name: ensure user has access to database
    postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} priv=ALL

  - name: ensure user does not have unnecessary privilege
    postgresql_user: name={{dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB

  handlers:
  - name: Start postgresql
  service: name=postgresql state=restarted enabled=yes

